(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[75],{Ho34:function(n,e,t){"use strict";t.r(e);var a=t("q1tI"),r=t.n(a),l=t("dEAq"),s=t("H1Ra"),o=r.a.memo((n=>{n.demos;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"markdown"},r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/add-strings/submissions/"},"\u5927\u6570\u76f8\u52a0")),r.a.createElement("li",null,r.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/multiply-strings/"},"\u5927\u6570\u76f8\u4e58"))),r.a.createElement("h2",{id:"\u5927\u6570\u76f8\u52a0"},r.a.createElement(l["AnchorLink"],{to:"#\u5927\u6570\u76f8\u52a0","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),r.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/add-strings/submissions/"},"\u5927\u6570\u76f8\u52a0")),r.a.createElement(s["a"],{code:"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar addStrings = function (num1, num2) {\n  var len = Math.max(num1.length, num2.length);\n  num1 = num1.padStart(len, '0');\n  num2 = num2.padStart(len, '0');\n  var res = '';\n  var flag = 0;\n  for (let i = len - 1; i >= 0; i--) {\n    flag = Number(num1[i]) + Number(num2[i]) + flag;\n    res = (flag % 10) + res;\n    flag = Math.floor(flag / 10);\n  }\n  res = flag === 1 ? '1' + res : res;\n  return res;\n};",lang:"js"}),r.a.createElement("h2",{id:"\u627e\u51fa\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5b57\u7b26\u4e32"},r.a.createElement(l["AnchorLink"],{to:"#\u627e\u51fa\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5b57\u7b26\u4e32","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"\u627e\u51fa\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5b57\u7b26\u4e32"),r.a.createElement(s["a"],{code:"// \u8f93\u5165 ['cpp','wmh','cpp']\n// \u8f93\u51fa \u2018cpp\u2019\nfunction findMaxStr(arr) {\n  var m = new Map();\n  var max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    var cur = arr[i];\n    if (!m.has(cur)) {\n      m.set(cur, 1);\n    } else {\n      var index = m.get(cur);\n      m.set(cur, index + 1);\n      max = Math.max(m.get(cur), max);\n    }\n  }\n  var str = '';\n  for (let [key, item] of m.entries()) {\n    if (max === item) {\n      str = key;\n    }\n  }\n  return str;\n}",lang:"js"}),r.a.createElement("p",null,"or"),r.a.createElement(s["a"],{code:"const getMostStr = (arr) => {\n  let obj = {};\n  let mostObj = {\n    str: '',\n    count: 0,\n  };\n  for (let i = 0; i < arr.length; i++) {\n    if (obj[arr[i]]) {\n      obj[arr[i]]++;\n    } else {\n      obj[arr[i]] = 1;\n    }\n    if (mostObj.count < obj[arr[i]]) {\n      mostObj.count = obj[arr[i]];\n      mostObj.str = arr[i];\n    }\n  }\n  return mostObj.str;\n};",lang:"js"})))}));e["default"]=n=>{var e=r.a.useContext(l["context"]),t=e.demos;return r.a.useEffect((()=>{var e;null!==n&&void 0!==n&&null!==(e=n.location)&&void 0!==e&&e.hash&&l["AnchorLink"].scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),r.a.createElement(o,{demos:t})}}}]);
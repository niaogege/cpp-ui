(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[77],{bwYa:function(e,n,t){"use strict";t.r(n);var r=t("q1tI"),a=t.n(r),l=t("dEAq"),o=t("H1Ra"),u=a.a.memo((e=>{e.demos;return a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"markdown"},a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement(l["Link"],{to:"https://leetcode-cn.com/problems/path-sum/"},"112.\u8def\u5f84\u603b\u548c")),a.a.createElement("li",null,a.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/path-sum-ii/"},"113.\u8def\u5f84\u603b\u548c\u4e8c")),a.a.createElement("li",null,a.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/path-sum-iii/"},"437. \u8def\u5f84\u603b\u548c III")),a.a.createElement("li",null,a.a.createElement(l["Link"],{to:"https://leetcode-cn.com/problems/3Etpl5/"},"\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6570\u5b57\u4e4b\u548c")),a.a.createElement("li",null,a.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"},"105.\u4ece\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811")),a.a.createElement("li",null,"\u4e8c\u53c9\u6811\u5c55\u5f00\u4e3a\u94fe\u8868"),a.a.createElement("li",null,a.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/"},"\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"))),a.a.createElement("h3",{id:"112-\u8def\u5f84\u603b\u548c"},a.a.createElement(l["AnchorLink"],{to:"#112-\u8def\u5f84\u603b\u548c","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:"icon icon-link"})),a.a.createElement(l["Link"],{to:"https://leetcode-cn.com/problems/path-sum/"},"112. \u8def\u5f84\u603b\u548c")),a.a.createElement("ul",null,a.a.createElement("li",null,"DFS")),a.a.createElement(o["a"],{code:"/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (!root) return false;\n  if (root.left == null && root.right == null) {\n    return targetSum - root.val === 0;\n  }\n  return (\n    hasPathSum(root.left, targetSum - root.val) || hasPathSum(root.right, targetSum - root.val)\n  );\n};",lang:"js"}),a.a.createElement("ul",null,a.a.createElement("li",null,"BFS")),a.a.createElement(o["a"],{code:"/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {boolean}\n */\nvar hasPathSum = function (root, targetSum) {\n  if (!root) return false;\n  var que_node = [root];\n  var que_val = [root.val];\n  while (que_node.length) {\n    var now = que_node.shift();\n    var val = que_val.shift();\n    if (now.left == null && now.right == null) {\n      if (val === targetSum) return true;\n      continue;\n    }\n    if (now.left) {\n      que_node.push(now.left);\n      que_val.push(val + now.left.val);\n    }\n    if (now.right) {\n      que_node.push(now.right);\n      que_val.push(val + now.right.val);\n    }\n  }\n  return false;\n};",lang:"js"}),a.a.createElement("h3",{id:"\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6570\u5b57\u4e4b\u548c"},a.a.createElement(l["AnchorLink"],{to:"#\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6570\u5b57\u4e4b\u548c","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:"icon icon-link"})),a.a.createElement(l["Link"],{to:"https://leetcode-cn.com/problems/3Etpl5/"},"\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6570\u5b57\u4e4b\u548c")),a.a.createElement(o["a"],{code:"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumNumbers = function (root) {\n  let res = [];\n  if (!root) return 0;\n  var dfs = (root, total) => {\n    // \u53f6\u5b50\u8282\u70b9\n    if (root.left == null && root.right == null) {\n      arr.push(`${root.val}`);\n    }\n    if (root) {\n      if (root.left) {\n        total = root.left.val + dfs(root.left, total);\n      }\n      if (root.right) {\n        total = root.right.val + dfs(root.right, total);\n      }\n    }\n    console.log(total, 'total');\n    return total;\n  };\n  dfs(root);\n  return res.reduce((a, b) => a + b, 0);\n};",lang:"js"}),a.a.createElement("h3",{id:"\u8def\u5f84\u603b\u548c\u4e8c"},a.a.createElement(l["AnchorLink"],{to:"#\u8def\u5f84\u603b\u548c\u4e8c","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:"icon icon-link"})),"\u8def\u5f84\u603b\u548c\u4e8c"),a.a.createElement("p",null,"2022.05.10 \u6700\u7b28\u7684\u65b9\u6cd5"),a.a.createElement(o["a"],{code:"/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {number[][]}\n */\nvar pathSum = function (root, targetSum) {\n  if (!root) return [];\n  let queue_node = [root];\n  let queue_val = [root.val];\n  let res = [];\n  while (queue_node.length) {\n    var len = queue_node.length;\n    for (let i = 0; i < len; i++) {\n      let node = queue_node.shift();\n      let val = queue_val.shift();\n      if (node.right === null && node.left === null) {\n        // \u6ee1\u8db3\u6761\u4ef6\u7684\u65f6\u5019\u653e\u5230\u6570\u7ec4\n        let sum = ('' + val).includes(',') ? val.split(',').map((e) => +e) : [+val];\n        let total = sum.reduce((a, b) => a + b, 0);\n        if (total === targetSum) {\n          res.push(sum);\n        }\n      }\n      if (node.left) {\n        node.left.val = val + ',' + node.left.val;\n        queue_node.push(node.left);\n        queue_val.push(node.left.val);\n      }\n      if (node.right) {\n        node.right.val = val + ',' + node.right.val;\n        queue_node.push(node.right);\n        queue_val.push(node.right.val);\n      }\n    }\n  }\n  return res;\n};",lang:"js"}),a.a.createElement("p",null,"2022.05.11"),a.a.createElement("ul",null,a.a.createElement("li",null,"\u4e24\u4e2a\u961f\u5217\u6539\u6210\u4e00\u4e2a\u961f\u5217"),a.a.createElement("li",null,"\u8bb0\u5f55\u4e0b\u5f53\u524d\u7684\u6570\u7ec4"),a.a.createElement("li",null,"\u540c\u65f6\u8fd8\u9700\u8981\u4e00\u4e2a\u5730\u65b9\u4fdd\u5b58\u7d2f\u8ba1\u503c\uff0c\u6539\u53d8\u5f53\u524d\u7684\u503c \u6700\u540e\u904d\u5386\u7684\u503c\u5373\u65f6\u6700\u672b\u5c3e\u7684\u7d2f\u52a0\u503c")),a.a.createElement(o["a"],{code:"/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {number[][]}\n */\nvar pathSum = function (root, targetSum) {\n  if (!root) return [];\n  let queue = [[root, [root.val]]];\n  let res = [];\n  while (queue.length) {\n    let len = queue.length;\n    for (let i = 0; i < len; i++) {\n      var [node, path] = queue.shift();\n      if (node.val === targetSum && node.left === null && node.right === null) {\n        res.push(path.slice());\n      }\n      if (node.left) {\n        let new_path = [...path, node.left.val];\n        node.left.val = val + node.left.val;\n        queue.push([node.left, new_path]);\n      }\n      if (node.right) {\n        let new_path = [...path, node.right.val];\n        node.right.val = val + node.right.val;\n        queue.push([node.right, new_path]);\n      }\n    }\n  }\n  return res;\n};",lang:"js"}),a.a.createElement("h3",{id:"437-\u8def\u5f84\u603b\u548c-iii"},a.a.createElement(l["AnchorLink"],{to:"#437-\u8def\u5f84\u603b\u548c-iii","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:"icon icon-link"})),a.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/path-sum-iii/"},"437. \u8def\u5f84\u603b\u548c III")),a.a.createElement(o["a"],{code:"/** \n  1.\u4e0d\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\n  2.\u4e0d\u9700\u8981\u5728\u53f6\u5b50\u7ed3\u70b9\u7ed3\u675f\n  3.\u8def\u5f84\u53ea\u80fd\u662f\u5411\u4e0b\n*/\n/**\n * @param {TreeNode} root\n * @param {number} targetSum\n * @return {number}\n */\nvar pathSum = function (root, targetSum) {\n  if (!root) return 0;\n  let res = helper(root, targetSum);\n  res += pathSum(root.left, targetSum);\n  res += pathSum(root.right, targetSum);\n  return res;\n};\nvar helper = (root, targetSum) => {\n  let num = 0;\n  if (!root) return 0;\n  if (root.val === targetSum) {\n    num++;\n  }\n  num += helper(root.left, targetSum - root.left.val);\n  num += helper(root.right, targetSum - root.right.val);\n  return num;\n};",lang:"js"}),a.a.createElement("h3",{id:"105\u4ece\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811"},a.a.createElement(l["AnchorLink"],{to:"#105\u4ece\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:"icon icon-link"})),a.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"},"105.\u4ece\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811")),a.a.createElement(o["a"],{code:"/**\n * @param {number[]} preorder\n * @param {number[]} inorder\n * @return {TreeNode}\n */\nvar buildTree = function (preorder, inorder) {};",lang:"js"}),a.a.createElement("h3",{id:"106\u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"},a.a.createElement(l["AnchorLink"],{to:"#106\u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811","aria-hidden":"true",tabIndex:-1},a.a.createElement("span",{className:"icon icon-link"})),a.a.createElement(l["Link"],{to:"https://leetcode.cn/problems/construct-binary-tree-from-inorder-and-postorder-traversal/"},"106.\u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811")),a.a.createElement(o["a"],{code:"/**\n * @param {number[]} inorder\n * @param {number[]} postorder\n * @return {TreeNode}\n */\nvar buildTree = function(inorder, postorder) {\n  if (!inorder.length || !postorder.length) return null;\n  var first = postorder.pop()\n  var tree = new TreeNode(first)\n  var mid = inorder.indexOf(first)\n  tree.left = buildTree(inorder.slice(0, mid), postorder.slice(0, mid))\n  tree.right = buildTree(inorder.slice(mid + 1), postorder(mid)))\n  return tree\n};",lang:"js"})))}));n["default"]=e=>{var n=a.a.useContext(l["context"]),t=n.demos;return a.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),a.a.createElement(u,{demos:t})}}}]);